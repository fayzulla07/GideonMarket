@using Syncfusion.Blazor.Grids

<SfGrid DataSource="Data" AllowPaging="true"
        Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })" Height="315">
    <GridEvents OnActionComplete="ActionComplete" TValue="SupplierViewModel"></GridEvents>
    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal" ShowDeleteConfirmDialog="true"></GridEditSettings>

    <GridColumns>
        <GridColumn Field=@nameof(SupplierViewModel.Id) Visible="false" HeaderText="ID" IsPrimaryKey="true" IsIdentity="true" ValidationRules="@(new ValidationRules{ Required=true})" TextAlign="TextAlign.Right" Width="120"></GridColumn>
        <GridColumn Field=@nameof(SupplierViewModel.FullName) HeaderText="Наименование" ValidationRules="@(new ValidationRules{ Required=true})" Width="120"></GridColumn>
        <GridColumn Field=@nameof(SupplierViewModel.Email) HeaderText="Email" ValidationRules="@(new ValidationRules{ Email=true })" Width="120"></GridColumn>
    </GridColumns>
</SfGrid>

@code{
    [Inject]
    public IAppService client { get; set; }
    public List<SupplierViewModel> Data { get; set; }
    EditModified editType;
    protected async override Task OnInitializedAsync()
    {
        Data = await client.GetAsync<List<SupplierViewModel>>("/api/supplier");
        string str = nameof(SupplierViewModel);
        int indx = str.IndexOf("ViewModel");
        string controllerName = str.Substring(0, indx - 1);
    }

    public async void ActionComplete(ActionEventArgs<SupplierViewModel> args)
    {
        if (args.RequestType == Syncfusion.Blazor.Grids.Action.BeginEdit)
        {
            editType = EditModified.Updated;
        }
        else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Add)
        {
            editType = EditModified.Added;
        }
        else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            if (editType == EditModified.Added)
            {
                var result = await client.InsertAsync<SupplierViewModel>(args.Data,"/api/supplier");
            }
            else if (editType == EditModified.Updated)
            {
                await client.UpdateAsync<SupplierViewModel>(args.Data,args.Data.Id, $"/api/supplier/");
            }
        }
        else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
        {
            await client.DeleteAsync(args.Data.Id, $"/api/supplier/");
        }
    }

}