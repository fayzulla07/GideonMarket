@using Radzen
@using Radzen.Blazor
<div class="h6">Прайс листы</div>
@inherits BaseComponent.BaseGrid<PlaceViewModel>
<RadzenCard Style="padding:5px;">
    <div class="d-flex flex-row">
        <div class="pr-1">
            <RadzenButton Size="ButtonSize.Small" Icon="add" Click="InsertRow" ButtonStyle="ButtonStyle.Secondary"></RadzenButton>
        </div>
        <div class="pr-1">
            <RadzenButton Size="ButtonSize.Small" Icon="save" Click="SaveRow" ButtonStyle="ButtonStyle.Info"></RadzenButton>
        </div>
        <div class="pr-1">
            <RadzenButton Size="ButtonSize.Small" Icon="clear" Click="CancelEdit" ButtonStyle="ButtonStyle.Primary"></RadzenButton>
        </div>
        <div class="pr-1">
            <RadzenButton Size="ButtonSize.Small" Icon="delete" Click="DeleteRow" ButtonStyle="ButtonStyle.Danger"></RadzenButton>
        </div>
    </div>
</RadzenCard>
<RadzenDataGrid @ref="Grid" FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" AllowColumnResize="true" AllowPaging="true" PageSize="10" AllowSorting="true"
                EditMode="DataGridEditMode.Single" RowDoubleClick="RowDoubleClickHandler" RowSelect="RowClickHandler"
                Data="@Data" TItem="PlaceViewModel" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow" @onkeypress="@(e => KeyPressed(e))">
    <Template Context="dsourse">
       <PlaceItemCmpt Place="dsourse"></PlaceItemCmpt>
    </Template>
    <Columns>

        <RadzenDataGridColumn TItem="PlaceViewModel" Property="Name" Title="Имя">
            <Template Context="dsourse">
                <span>@dsourse.Name</span>
            </Template>
            <EditTemplate Context="dsourse">
                <RadzenTextBox @bind-Value="dsourse.Name" Style="width:100%"></RadzenTextBox>
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code{
    protected async override Task OnInitializedAsync()
    {
        RemotePath = "api/Place";
        ConfirmProperty = "Name";
        await GetDataAsync();

    }

}
