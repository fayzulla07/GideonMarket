@page "/fetchdata"
@using GideonMarket.Web.Shared
@inject HttpClient Http
@using System.Linq; 
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="forecasts" Context="car">
               
                    <tr>
                        <td>@car.Date.ToShortDateString()</td>
                        <td>@car.TemperatureC</td>
                        <td>@car.TemperatureF</td>
                        <td>@car.Summary</td>
                    </tr>

               
            </Virtualize>
           
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }

}
